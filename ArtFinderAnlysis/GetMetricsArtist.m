function Metrics = GetMetricsArtist(confusion_matrix, class_count, artist_index)
    Metrics = zeros(1,13,"double");
    Metrics(1) = class_count;
    total_observations = sum(confusion_matrix,"all");
    Metrics(2) = total_observations;
    true_positives = diag(confusion_matrix);
    true_positive = true_positives(artist_index);
    false_positives = sum(confusion_matrix,2)-true_positives;
    false_positive = false_positives(artist_index);
    false_negatives = sum(confusion_matrix,1)'-true_positives;
    false_negative = false_negatives(artist_index);
    total_row = sum(confusion_matrix,2);
    total_row_1 = total_row(artist_index);
    total_column = sum(confusion_matrix,1);
    total_column_1 = total_column(artist_index);
    true_negatives = total_observations-true_positives-false_positives-false_negatives;
    true_negative_1 = total_row_1-true_positive-false_positive;
    true_negative_2 = total_column_1-true_positive-false_negative;
    if true_negative_1 ~= true_negative_2
        x = 1;
    end
    error_rate = (false_positive+false_negative)/(true_positive+false_negative+false_positive+true_negative_1);
    Metrics(3) = error_rate;
    accuracy_macro = (true_positive+true_negative_1)/(true_positive+true_negative_1+false_positive+false_negative);
    Metrics(4) = accuracy_macro;
    balanced_accuracy_micro = true_positive/total_row_1;
    Metrics(5) = balanced_accuracy_micro;
    balanced_accuracy_macro = true_positive/total_row_1;
    Metrics(6) = balanced_accuracy_macro;
    precision_micro = true_positive/true_positive+false_positive;
    Metrics(7) = precision_micro;
    precision_macro = true_positive/(true_positive + false_positive+realmin(class(true_positive)));
    Metrics(8) = precision_macro;
    recall_micro=true_positive/(true_positive+false_negative);
    Metrics(9) = recall_micro;
    recall_macro=true_positive./(true_positive + false_negative+realmin(class(true_positive)));
    Metrics(10) = recall_macro;
    f1_score_micro = 2 * recall_micro * precision_micro/(recall_micro + precision_micro);
    Metrics(11) = f1_score_micro;
    f1_score_macro = 2 * recall_macro * precision_macro/(recall_macro + precision_macro);
    Metrics(12) = f1_score_macro;
    %MCA = (true_positives+true_negatives)./(true_positives+true_negatives+false_positives+false_negatives);
    %c = sum(confusion_matrix,2);
    %WMCA=sum(MCA.*(c/total_observations));
    accuracy_micro = (true_positive+true_negative_1)/(true_positive+true_negative_1+false_positive+false_negative);
    Metrics(13) = accuracy_micro;
end

